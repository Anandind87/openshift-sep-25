apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: mysql
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: setup-replication
          image: mysql:8.0
          command: ['sh', '-c']
          args:
            - |
              if [ "$(hostname | awk -F'-' '{print $NF}')" = "0" ]; then
                echo ">> This is mysql-0 (Primary), ensuring replication user exists..."
                until mysql -h localhost -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"; do sleep 5; done
                mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE USER IF NOT EXISTS '$MYSQL_REPL_USER'@'%' IDENTIFIED WITH mysql_native_password BY '$MYSQL_REPL_PASSWORD'; GRANT REPLICATION SLAVE ON *.* TO '$MYSQL_REPL_USER'@'%'; FLUSH PRIVILEGES;"
              else
                echo ">> This is a Replica pod, configuring replication..."
                until mysql -h mysql-0.mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"; do sleep 5; done
                mysql -h localhost -uroot -p$MYSQL_ROOT_PASSWORD -e "STOP REPLICA; CHANGE REPLICATION SOURCE TO SOURCE_HOST='mysql-0.mysql', SOURCE_USER='$MYSQL_REPL_USER', SOURCE_PASSWORD='$MYSQL_REPL_PASSWORD', SOURCE_AUTO_POSITION=1; START REPLICA;"
              fi
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
            - name: MYSQL_REPL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: repl-user
            - name: MYSQL_REPL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: repl-password
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-password
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: config-volume
              mountPath: /etc/mysql/conf.d
      volumes:
        - name: config-volume
          configMap:
            name: mysql-config
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
